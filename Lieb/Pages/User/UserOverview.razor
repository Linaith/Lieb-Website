@page "/useroverview"
@using Lieb.Data
@using Lieb.Models
@using Lieb.Models.GuildWars2
@inject UserService UserService


<h3>User Overview</h3>


<AuthorizeView Policy="@Constants.Roles.Admin.Name">
    <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="roleedit">
                <span class="oi oi-plus" aria-hidden="true"></span> Edit Roles
            </NavLink>
        </div> 
    </Authorized>
</AuthorizeView>


<label>
    Banned Only:
    <input type="checkbox" @bind="_bannedOnly" />
</label>   
<label>
    Search:
    <input @bind="_searchString" />
</label>

    <table>
    <tr>
        <th>Name</th>
        <th>GW2 Account</th>
        <th style="padding-left: 15px;">Created At</th>
        <th style="padding-left: 15px;">Banned Until</th>
    </tr>
    @{
        HashSet<LiebUser> foundUsers = new HashSet<LiebUser>();
        if(_bannedOnly)
        {
            foreach(LiebUser user in _users.Where(u => u.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase) && u.BannedUntil >= DateTime.Now.Date))
            {
                foundUsers.Add(user);
            }
            foreach(LiebUser user in _users.Where(u => u.GuildWars2Accounts.Where(a => a.AccountName.Contains(_searchString, StringComparison.OrdinalIgnoreCase)).Any() && u.BannedUntil >= DateTime.Now.Date))
            {
                foundUsers.Add(user);
            }
        }
        else
        {
            foreach(LiebUser user in _users.Where(u => u.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase)))
            {
                foundUsers.Add(user);
            }
            foreach(LiebUser user in _users.Where(u => u.GuildWars2Accounts.Where(a => a.AccountName.Contains(_searchString, StringComparison.OrdinalIgnoreCase)).Any()))
            {
                foundUsers.Add(user);
            }
        }
    }
    @foreach (LiebUser user in foundUsers.OrderBy(u => u.CreatedAt))
    {
        <tr>    
            <td class="nav-item px-3">
                @{string navLink = $"useredit/{@user.Id}";}
                <NavLink class="nav-link" href="@navLink">@user.Name</NavLink>
            </td>
            <td>@foreach(var account in user.GuildWars2Accounts){<div>@account.AccountName </div> }</td>
            <td style="padding-left: 15px;">@user.CreatedAt.ToShortDateString()</td>
            @if(user.BannedUntil >= DateTime.Now.Date)
            {
                <td style="padding-left: 15px;">@user.BannedUntil?.ToShortDateString()</td>
            }
        </tr>
    }
</table> 

@code 
{
    private List<LiebUser> _users;

    private bool _bannedOnly;
    private string _searchString = string.Empty;
    private string _newRoleName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _users = UserService.GetLiebUsers();
    }
}
